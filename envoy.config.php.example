<?php

/**
 * Sometimes, separating Envoy script form its config comes in handy in a situation,
 * where we want not to disclose the sensitive information.
 * Using this approach, we can add this config to the ignore list of version control.
 *
 * Once we can include this file, in the envoy.blade.php
 *     <?php include(__DIR__ . '/./envoy.config.php'); >
 * Then, the config var can be accessible using config() helper and dot(.) syntax.
 *     echo {{ config('server.host') }};
 */

$conf = [

    'server' => [
        'host' => 'aws-seoul-deploy',
    ],

    'path'        => [
        'base'    => '/home/deployer/web',
        'docroot' => '/home/deployer/web/envoy.appkr.kr',
        'shared'  => '/home/deployer/web/shared',
        'release' => '/home/deployer/web/releases',
    ],

    'required_dirs' => [
        '/home/deployer/web',
        '/home/deployer/web/shared',
        '/home/deployer/web/releases',
    ],

    'shared_item' => [
        ['/home/deployer/web/shared/.env' => '.env'],
        ['/home/deployer/web/shared/storage' => 'storage'],
        ['/home/deployer/web/shared/cache' => 'bootstrap/cache'],
        ['/home/deployer/web/shared/attachments' => 'public/attachments'],
    ],

    'distribution' => [
        'name' => 'release_' . date('YmdHis'),
    ],

    'git' => [
        'repo' => 'git@github.com:appkr/envoy.git',
    ],
];

/* DO NOT TOUCH BELOW, UNLESS YOU KNOW WHAT YOU ARE DOING */

/**
 * Get an item from an array using "dot" notation.
 *
 * @param  array  $array
 * @param  string $key
 * @param  mixed  $default
 * @return mixed
 */
function get($array, $key, $default = null)
{
    if (isset($array[$key])) {
        return $array[$key];
    }

    foreach (explode('.', $key) as $segment) {
        if (! is_array($array) || ! array_key_exists($segment, $array)) {
            return $default;
        }

        $array = $array[$segment];
    }

    return $array;
}

/**
 * Find the array value matching the given key.
 *
 * @param $key
 * @return mixed
 */
function config($key)
{
    global $conf;

    return get($conf, $key);
}